<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>转义 on Code Mark</title>
    <link>https://hzren.github.io/tags/%E8%BD%AC%E4%B9%89/</link>
    <description>Recent content in 转义 on Code Mark</description>
    <generator>Hugo -- gohugo.io</generator>
    <managingEditor>hzren@outlook.com (renhongzhen)</managingEditor>
    <webMaster>hzren@outlook.com (renhongzhen)</webMaster>
    <lastBuildDate>Tue, 02 Aug 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://hzren.github.io/tags/%E8%BD%AC%E4%B9%89/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Mysql转义字符</title>
      <link>https://hzren.github.io/blog/2022-08-02-mysql%E8%BD%AC%E4%B9%89%E5%AD%97%E7%AC%A6/</link>
      <pubDate>Tue, 02 Aug 2022 00:00:00 +0000</pubDate>
      <author>hzren@outlook.com (renhongzhen)</author>
      <guid>https://hzren.github.io/blog/2022-08-02-mysql%E8%BD%AC%E4%B9%89%E5%AD%97%E7%AC%A6/</guid>
      <description>如果在文本搜索实现LIKE查询，通常会这样做：
SELECT * FROM T_Whatever WHERE SomeField LIKE CONCAT(&amp;#39;%&amp;#39;, @in_SearchText, &amp;#39;%&amp;#39;) 然而，（除非不使用like使用全文搜索）当有人输入“50%”或“a_b”之类的文本时，这会产生问题。这时候需要使用LIKE转义词来解决这个问题：
SELECT * FROM T_Whatever WHERE SomeField LIKE CONCAT(&amp;#39;%&amp;#39;, @in_SearchText, &amp;#39;%&amp;#39;) ESCAPE &amp;#39;\&amp;#39; 这意味着\现在将被视为ESCAPE字符。这意味着，现在只需在搜索字符串中的每个字符前加上\，结果就会开始正确，即使用户输入了特殊字符，比如%或_。
例如
string stringToSearch = &amp;#34;abc_def 50%&amp;#34;; string newString = &amp;#34;&amp;#34;; foreach(char c in stringToSearch) newString += @&amp;#34;\&amp;#34; + c; sqlCmd.Parameters.Add(&amp;#34;@in_SearchText&amp;#34;, newString); // instead of sqlCmd.Parameters.Add(&amp;#34;@in_SearchText&amp;#34;, stringToSearch); 上述代码仅用于演示。如果一个字符由点码表示（比如utf-8），这将不起作用。 例如
string stringToSearch=“Les Mise\u0301ables”； </description>
    </item>
    
  </channel>
</rss>
